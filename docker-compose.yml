version: '3.9'

services:
  frontend:
    image: julianlechner/ecommerce-frontend
    ports:
      - "3000:80"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    environment:
        - REACT_APP_BACKEND_URL = /api/

  backend:
    image: julianlechner/ecommerce-backend
    ports:
      - "8000:8000"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    volumes:
      - "~/apps/backend:/var/lib/backend/data"
    
    
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    volumes:
      - "~/apps/postgres:/var/lib/postgresql/data"
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    labels:
      com.centurylinklabs.watchtower.enable: "true"

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    ports:
      - "5050:80"
    env_file:
      - ./.env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}        
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - "~/apps/pgadmin:/var/lib/pgadmin" # Persist PGAdmin data
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    command: --interval 30 --label-enable --cleanup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  nginx:
    depends_on:
      - frontend
      - backend
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    ports:
      - 3050:80